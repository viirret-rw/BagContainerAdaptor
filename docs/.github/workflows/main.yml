# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # install
      - name: Install texlive and minted
        run: |
          sudo apt-get install texlive-full
          sudo apt-get install texlive-latex-extra
          sudo apt-get install python3-pygments

      # compile Finnish version
      - name: compile to generate a pdf
        run: |
          xelatex -shell-escape -8bit main
          biber main
          makeglossaries main
          xelatex -shell-escape -8bit main
          xelatex -shell-escape -8bit main
          
      - name: get the pdf
        run: |
          mkdir pub
          mv main.pdf pub/main_fi.pdf
      
      # compile English versions (bilingual abstract and one abstract)
      - name: compile to generate English verion of the pdf
        run: |
          sed -i 's/^\\def\\thesislang{finnish}.*/\\def\\thesislang{english}/' chapters/0info.tex
          sed -i 's/^\\def\\secondlang{english}.*/\\def\\secondlang{finnish}/' chapters/0info.tex
          xelatex -shell-escape -8bit main
          mv main.pdf pub/main_en_bi.pdf
          sed -i 's/^\\def\\bilingual{yes}.*/\\def\\bilingual{no}/' chapters/0info.tex
          xelatex -shell-escape -8bit main
          mv main.pdf pub/main_en.pdf
    
      - name: publish pdf as proof
        uses: actions/upload-artifact@v2
        with: 
          name: assets-for-download
          path: pub
